app:
  title: The coolest company
  baseUrl: http://localhost:3000

organization:
  name: My cool company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'

integrations:
  github:
    - host: github.com
      enabled: true
      token: ${GITHUB_TOKEN}
      # Or alternatively, use GitHub App authentication
      # apps:
      #   - appId: ${GITHUB_APP_ID}
      #     allowedInstallationOwners: ['backstage']
      #     clientId: ${GITHUB_CLIENT_ID}
      #     clientSecret: ${GITHUB_CLIENT_SECRET}
      #     privateKey: ${GITHUB_APP_PRIVATE_KEY}
      #     webhookSecret: ${GITHUB_WEBHOOK_SECRET}

search:
  collators:
    github:
      org: backstage
      host: github.com
      query: is:issue is:open org:backstage

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers:
    # See https://backstage.io/docs/auth/guest/provider
    guest: {}
